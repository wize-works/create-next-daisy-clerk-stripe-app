name: Publish to NPM

on:
    release:
        types: [published]

jobs:
    publish:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Update package version
              run: |
                  # Extract version from git tag (remove 'v' prefix if present)
                  VERSION=${GITHUB_REF#refs/tags/}
                  VERSION=${VERSION#v}
                  echo "Setting version to: $VERSION"
                  npm version $VERSION --no-git-tag-version

            - name: Publish to NPM
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub deployment
              uses: actions/github-script@v7
              with:
                  script: |
                      const { data: release } = await github.rest.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: context.ref.replace('refs/tags/', '')
                      });

                      await github.rest.repos.createDeployment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        ref: context.sha,
                        environment: 'npm',
                        description: `Published version ${context.ref.replace('refs/tags/', '')} to NPM`,
                        auto_merge: false,
                        required_contexts: []
                      });

            - name: Comment on release
              uses: actions/github-script@v7
              with:
                  script: |
                      const tag = context.ref.replace('refs/tags/', '');
                      const version = tag.replace(/^v/, '');

                      const { data: release } = await github.rest.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: tag
                      });

                      const comment = `ðŸŽ‰ Successfully published to NPM!\n\nVersion: ${version}\nPackage: @wizeworks/create-next-daisy-clerk-stripe-app@${version}\n\nInstall with: npx @wizeworks/create-next-daisy-clerk-stripe-app@latest my-app`;

                      await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: release.id,
                        body: comment
                      });
