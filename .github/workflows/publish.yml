name: Publish to NPM

on:
    release:
        types: [published]
    workflow_dispatch:
        inputs:
            version_source:
                description: "How to determine version to publish"
                required: true
                default: "latest_tag"
                type: choice
                options:
                    - latest_tag
                    - package_json
                    - manual
            manual_tag:
                description: "Manual tag (only if 'manual' is selected above)"
                required: false
                type: string

jobs:
    publish:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"
                  registry-url: "https://registry.npmjs.org"

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Determine version to publish
              id: version
              run: |
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    # Manual workflow trigger
                    case "${{ github.event.inputs.version_source }}" in
                      "latest_tag")
                        echo "Using latest git tag..."
                        TAG=$(git describe --tags --abbrev=0)
                        ;;
                      "package_json")
                        echo "Using version from package.json..."
                        VERSION=$(node -p "require('./package.json').version")
                        TAG="v$VERSION"
                        ;;
                      "manual")
                        echo "Using manually specified tag..."
                        TAG="${{ github.event.inputs.manual_tag }}"
                        ;;
                    esac
                  else
                    # Release trigger
                    TAG=${GITHUB_REF#refs/tags/}
                  fi
                  
                  VERSION=${TAG#v}
                  CURRENT_VERSION=$(node -p "require('./package.json').version")
                  
                  echo "Target tag: $TAG"
                  echo "Target version: $VERSION"
                  echo "Current package.json version: $CURRENT_VERSION"
                  
                  # Set outputs for later steps
                  echo "tag=$TAG" >> $GITHUB_OUTPUT
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  
                  # Update package.json if needed
                  if [ "$VERSION" != "$CURRENT_VERSION" ]; then
                    echo "Updating package.json from $CURRENT_VERSION to $VERSION"
                    npm version $VERSION --no-git-tag-version
                  else
                    echo "âœ… Package.json version already matches target version $VERSION"
                  fi

            - name: Publish to NPM
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Create GitHub deployment
              uses: actions/github-script@v7
              with:
                  script: |
                      const { data: release } = await github.rest.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: '${{ steps.version.outputs.tag }}'
                      });

                      await github.rest.repos.createDeployment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        ref: context.sha,
                        environment: 'npm',
                        description: `Published version ${{ steps.version.outputs.tag }} to NPM`,
                        auto_merge: false,
                        required_contexts: []
                      });

            - name: Comment on release
              uses: actions/github-script@v7
              with:
                  script: |
                      // Get version from previous step or context
                      const tag = '${{ steps.version.outputs.tag }}' || context.ref.replace('refs/tags/', '');
                      const version = '${{ steps.version.outputs.version }}' || tag.replace(/^v/, '');

                      const { data: release } = await github.rest.repos.getReleaseByTag({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag: '${{ steps.version.outputs.tag }}'
                      });

                      const comment = `ðŸŽ‰ Successfully published to NPM!\n\nVersion: ${version}\nPackage: @wizeworks/create-next-daisy-clerk-stripe-app@${version}\n\nInstall with: npx @wizeworks/create-next-daisy-clerk-stripe-app@latest my-app`;

                      await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: release.id,
                        body: comment
                      });
